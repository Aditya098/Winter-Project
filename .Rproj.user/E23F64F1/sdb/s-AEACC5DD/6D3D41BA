{
    "collab_server" : "",
    "contents" : "library(shiny)\nlibrary(DT)\nlibrary(ggplot2)\nlibrary(plotly)\n\nlibrary(twitteR)\n\nlibrary(ggmap)\nlibrary(maps)\nlibrary(ggplot2)\nlibrary(NbClust)\nlibrary(httr)\nlibrary(devtools)\nlibrary(RColorBrewer) \n\nshinyServer(function(input, output, session) {\n\n  \n  output$mm <- renderUI({\n    if(input$sep==\"new\"){\n      list(tags$p(tags$u(h4(paste0(\"Midterm \", \":\")))),\n            column(12, textInput(\"akey\", \"Enter API key\" , value = \"\")),\n            column(12, textInput(\"asec\", \"Enter API Secret key\" , value = \"\")),\n            column(12, textInput(\"tok\", \"Enter Token\" , value = \"\")),\n            column(12, textInput(\"tsec\", \"Enter Token Secret key\" , value = \"\"))\n      )\n    }\n  }) \n  \n  \n  \n  output$marks <- renderPlot({\n    \n    \n    \n    if(input$sep=='default'){\n      options(httr_oauth_cache=T)\n      api_key <- \"9OWlp1fFQMfhRGMdoe1bT5wq2\"\n      api_secret <- \"kdCmc7PD5SrhhkoJ1UeRvuzQrYgc6DY9lGyA6TZpU1hatBYLkE\"\n      token <- \"4717263320-k3AbCBOFipWG8DiChZVSlmw3ODMKMCNGXagzQsx\"\n      token_secret <- \"Zr67eFdorrDZxoUq8Ec8KuSk75yK8zwqfooOf3fbxB9LG\"\n      \n    }\n    else if(input$sep=='new'){\n      options(httr_oauth_cache=T)\n      api_key <- akey\n      api_secret <- asec\n      token <- tok\n      token_secret <- tsec\n    }\n    # Create Twitter Connection\n    setup_twitter_oauth(api_key, api_secret, token, token_secret)\n    \n    user <- try(getUser(input$usernam),silent=TRUE) \n    followers <- user$getFollowers(input$ab)  #limiting followers to 1000\n    followers <- twListToDF(followers)    #converting to dataframe\n    followers$location[followers$location==\"\"] <- NA    #assigning NA (not applicable)to \n    #followers whose location is not specified \n    #length(followers)\n    followers <- followers[sample(1:nrow(followers), size =50, replace=TRUE),]  #size must be less than length of followers\n    \n    loc1<- !is.na(followers$location) \n    loc<-followers$location[loc1]   \n    coord <- geocode(loc)          # geocoding the followers locations\n    setwd(\"C:\\\\Users\\\\LOKESH TODWAL\\\\Desktop/\")\n    y <- read.table(\"coord.txt\")\n   \n    nb <- NbClust(y, distance = \"euclidean\", min.nc = 2,\n                  max.nc = 15, method = \"kmeans\", index =\"all\")  \n    \n    nClust<-length(unique(nb$Best.partition))\n    kmeans.df <- data.frame(lat = coord$lat,\n                            lon = coord$lon)\n    kmeans.df <- na.omit(kmeans.df)     #omiting terms with NA \n    \n    \n    fit <- kmeans(kmeans.df, centers = nClust, nstart = 20)\n    \n    kmeans.df$cluster = fit$cluster #adding cluster column to data frame\n    \n    colfunc<-colorRampPalette(c(\"red\",\"yellow\",\"springgreen\",\"royalblue\"))\n    cols <- colfunc(nClust)  #to points with same cluster number\n    for(i in 1:nClust){\n      kmeans.df$color[kmeans.df$cluster == i] <- cols[i]\n    }\n    \n    kmeans.df$Cluster <- as.factor(kmeans.df$cluster)\n    \n    map.dat <- map_data(\"world\")\n    \n    g <- ggplot() +                       #plotting the geopoints with clusters \n      geom_polygon(aes(long,lat, group=group), fill=\"grey85\", data=map.dat) +\n      geom_jitter(aes(x = lon, y = lat, fill=Cluster,\n                      colour=Cluster), alpha=1, size=1.4,  data = kmeans.df) + \n      guides(fill = guide_legend( override.aes = list(alpha = 1))) +\n      theme_minimal() +\n      theme(text = element_text(size=15),\n            legend.position=\"top\")\n    \n    g <- g +\n      stat_density_2d(\n        aes(x = lon, y = lat,fill=as.factor(cluster), colour=as.factor(cluster)), \n        bins = 10, alpha=.2,\n        size=0, data = kmeans.df, geom = \"polygon\") \n    \n    g\n    \n  })\n  \n  \n  \n  \n})",
    "created" : 1486206187318.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2237478343",
    "id" : "6D3D41BA",
    "lastKnownWriteTime" : 1486205692,
    "last_content_update" : 1486206303554,
    "path" : "~/WIP/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}